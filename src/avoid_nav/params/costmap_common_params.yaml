map_type: costmap
origin_z: 0.0
z_resolution: 1
z_voxels: 2

# consider distance to obstacles
obstacle_range: 2.5 #2.5
min_obstacle_height: 0
max_obstacle_height: 3.0
# ignore obstacles bigger thandistance bigger than 3.0
raytrace_range: 3.0 #3.0

publish_voxel_map: false
transform_tolerance: 0.5
meter_scoring: true

# size of robot
footprint: [[-0.21, -0.165], [-0.21, 0.165], [0.21, 0.165], [0.21, -0.165]]
#footprint: [[-0.20, -0.15], [-0.20, 0.15], [0.20, 0.15], [0.20, -0.15]]
#footprint: [[-0.15, -0.10], [-0.15, 0.10], [0.15, 0.10], [0.15, -0.10]]
#footprint: [[-0.02, -0.02], [-0.02, 0.02], [0.02, 0.02], [0.02, -0.02]] #very good
#footprint: [[-0.01, -0.01], [-0.01, 0.01], [0.01, 0.01], [0.01, -0.01]]
footprint_padding: 0.1


plugins:
- {name: obstacles_layer, type: "costmap_2d::ObstacleLayer"}
- {name: inflater_layer, type: "costmap_2d::InflationLayer"}

# obstacles_layer:
#   observation_sources: scan
#   scan: {sensor_frame: front_laser, data_type: LaserScan, topic: front/scan, marking: true, clearing: true, min_obstacle_height: -2.0, max_obstacle_height: 2.0, obstacle_range: 2.5, raytrace_range: 3.0}
obstacles_layer:
  observation_sources: scan
  scan: {sensor_frame: tim551, data_type: LaserScan, topic: front/scan, marking: true, clearing: true, min_obstacle_height: -1.0, max_obstacle_height: 2.0, obstacle_range: 2.5, raytrace_range: 3.0}
  # observation_sources: laser_scan_sensor
  # laser_scan_sensor: {sensor_frame: velodyne, data_type: PointCloud2, topic: /mid/points, clearing: true, marking: true,min_obstacle_height: 0.015, max_obstacle_height: 0.3, obstacle_range: 2.5, raytrace_range: 3.0}



